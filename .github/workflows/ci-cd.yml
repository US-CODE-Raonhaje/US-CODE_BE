name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 소스 체크아웃
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Gradle 빌드
        run: ./gradlew build -x test

      - name: Google Cloud 인증
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: gcloud CLI 설정
        uses: google-github-actions/setup-gcloud@v2

      - name: Artifact Registry에 도커 로그인
        run: gcloud auth configure-docker ${{ secrets.GKE_REGION }}-docker.pkg.dev

      - name: 도커 이미지 빌드 및 푸시
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          docker build \
            --build-arg DB_URL=$DB_URL \
            --build-arg DB_USERNAME=$DB_USERNAME \
            --build-arg DB_PASSWORD=$DB_PASSWORD \
            -t ${{ secrets.GKE_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ secrets.ARTIFACT_REPO }}/memory-map:${{ github.sha }} .
          docker push ${{ secrets.GKE_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ secrets.ARTIFACT_REPO }}/memory-map:${{ github.sha }}

      - name: GKE 인증
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --region ${{ secrets.GKE_REGION }} --project ${{ secrets.GCP_PROJECT }}

      - name: gke-gcloud-auth-plugin 설치
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Deployment 리소스 적용 (envsubst로 이미지 URL 치환)
        env:
          IMAGE_URL: ${{ secrets.GKE_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ secrets.ARTIFACT_REPO }}/memory-map:${{ github.sha }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          envsubst < k8s/deployment.yaml | kubectl apply -f -

      - name: 쿠버네티스 배포(롤링 업데이트)
        run: |
          kubectl rollout status deployment/memory-map